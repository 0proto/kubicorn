package bootstrap

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _bootstrap_readme_md = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x91\x41\x8f\xd4\x30\x0c\x85\xef\xf9\x15\x4f\x9a\x03\x97\x55\xf9\x09\x48\x1c\x90\xf6\x00\x27\xb4\x5c\x9b\x69\xdc\xad\x77\xd2\xb8\x4a\x9c\xad\x46\x88\xff\x8e\xdd\x59\x46\xc0\x9e\x32\x53\xdb\xef\x7d\xcf\x3e\xe1\xb3\x88\x36\xad\x71\x0b\xe1\xfb\x42\x8d\x10\x2b\x41\x17\xc2\xf9\x4f\x01\x6d\xaa\xbc\x69\xb3\xaf\x51\xd1\x16\xde\xb0\xb3\x2e\x47\x53\xa2\x39\xf6\xac\x18\x2f\xfd\xcc\x93\xd4\x32\x62\xab\x32\x73\xa6\x36\x84\xf0\x85\x28\x63\xae\x64\x82\x82\x98\x12\xae\xd2\x2b\x64\x2f\x0f\x90\x8a\x55\x12\xcf\x57\x97\x71\x57\x45\x2c\xf6\x87\x57\x1a\x0e\x92\xbb\xab\xf3\xd0\x3c\xd3\xa4\xfc\x4a\xf9\x8a\xdd\x29\x76\x42\xf7\xa9\x86\xd1\xde\x8a\x14\x35\x8e\xee\xc2\x85\x4d\x09\x4f\x5f\x43\x38\x9d\x4e\x78\x44\x21\x4a\x5e\x50\x5a\xb7\x1c\x95\x20\x5d\x21\xc5\xde\xf9\xcd\xfa\x5d\xd0\x10\xbe\x89\xa3\x22\x49\xf9\xa0\x03\x7e\x54\xb6\xb9\x73\x6c\x0b\x32\x5f\xcc\xd5\x33\x0e\xff\x18\xac\x62\x94\x0e\x61\x00\x56\xff\x5f\xf2\x06\xdd\x16\xe9\x39\xd9\x48\x92\x4f\x21\x3c\xce\x87\x47\xa5\x98\x2d\xd5\x14\x8b\x51\xd9\x8f\x67\x52\x58\x84\xb9\xca\xfa\xf7\x56\x63\x49\x28\xb2\x2f\xe4\xdb\xc8\x8d\x1e\x8e\x61\x9f\xf2\x3d\xf8\x29\xc6\xa7\x98\x3b\xb5\x9f\xbf\x46\x98\x75\x9f\xd4\x53\xdb\x7d\xd8\xb2\x4e\xbd\xa9\xe9\x5d\xe8\xfa\xf1\xd5\xbb\xb0\x45\xae\x6f\x07\xdd\x39\x67\x9c\xc9\xc0\x5f\x6c\xc7\x96\x85\x8b\xca\xed\x52\x37\xf8\xc1\xce\xc1\xed\xde\x17\x31\x49\x32\xc9\x25\x96\x67\xc3\x70\x30\xab\xda\x10\x95\x74\x5b\xb5\x35\xbd\x98\xe1\x21\x3f\xfc\x0e\x00\x00\xff\xff\x8c\x9a\x9e\x97\x62\x02\x00\x00")

func bootstrap_readme_md() ([]byte, error) {
	return bindata_read(
		_bootstrap_readme_md,
		"bootstrap/README.md",
	)
}

var _bootstrap_amazon_k8s_ubuntu_16_04_master_sh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x54\xdd\x6b\x23\x37\x10\x7f\xd7\x5f\x31\x75\x02\x69\xe0\xb4\x4a\xd2\xd2\x42\x20\x85\xde\x35\x0f\xe9\x95\xbb\x10\xd2\xf6\xa5\x2f\xb2\x34\xd9\x55\x57\x2b\x09\x7d\xd8\x31\x57\xf7\x6f\xef\x48\xbb\x49\x1c\x38\xca\xbd\x9d\x0d\xb6\xe6\xfb\xeb\x37\x73\xf4\x8d\x28\x29\x8a\xb5\x71\x02\xdd\x06\xd6\x32\x0d\x2c\x61\x06\x8e\x4c\x69\xf8\x97\xb1\x23\xe0\x5f\xe9\x43\xa1\xef\x07\x4c\x08\x1b\x69\x0b\x26\x90\x11\xc1\xb8\xbf\x51\x65\xd4\xf4\xc8\x1e\xf2\x80\x90\x54\x34\x21\x77\xf0\x27\x36\x05\x7c\x0c\xd6\x28\x93\xed\x0e\x9c\xcf\x50\x92\x71\x3d\x48\xc8\x38\x05\x2b\x73\x25\xac\x74\x7d\x91\x3d\x02\x39\x98\xdd\x35\x3f\x73\x10\x8a\x29\x53\x95\xa0\x53\xbe\xc4\xa6\x46\xc2\x92\x30\x56\xae\x35\x93\x69\xea\x26\x56\x1e\xf8\x87\x57\x9e\x7d\x6f\x14\xf9\xac\x0a\x24\x7c\x30\x16\x53\x07\x6f\x77\xa0\x31\x99\xde\x81\xb4\xf6\xa5\x80\xa5\xa8\x34\xf8\x62\x35\x85\x5d\x53\xfe\x6b\xdb\xb2\xa2\x67\x1d\x81\xcc\x10\x8b\xcb\x66\xc2\x37\x20\x9d\x9e\xab\x1d\x90\x9c\xcc\x35\x43\x44\x69\x61\xeb\xe3\xd8\xc1\xcd\x03\xec\x7c\x01\x87\xe4\x59\x79\xa7\x4d\x36\xde\x91\xb4\xa5\xf4\x06\xb6\xd1\x64\x6a\x5e\xae\xc9\xb5\x11\x1f\x81\x8f\x30\xc9\x91\x82\x52\x9b\x06\xaa\xee\xd0\x73\xc7\x8e\xe8\x7b\xff\xf1\xfd\xf5\x87\xab\xd5\xcd\x87\x5f\xaf\xdf\xdd\x5f\xff\xd2\xc8\x15\xbb\xfd\x78\x77\xff\xc2\xac\xd4\xea\x6b\x62\x84\xa9\x12\x2d\xf0\x04\x43\xce\x21\x5d\x0a\x11\xa4\x1a\x69\x6c\xa9\x53\xd6\x17\xdd\xf5\xde\xf7\x16\x3b\xe5\x27\x21\x43\x16\xda\xab\xfa\xcf\x47\xdc\x75\x7d\xe8\xe1\x1f\x48\x45\x7b\x58\x58\x20\xb5\x06\xce\xb2\x2f\x6a\x00\x81\xb9\xe9\x8a\x44\x40\x50\xe4\xd0\x9a\x94\x3b\x2d\xc6\xb2\xc6\xe8\x30\x2f\x1c\x96\x06\xe0\x0a\x4e\x50\x0d\x1e\x56\x1a\xd7\x2d\x13\x4a\x84\x4c\xbb\x03\x5d\xe3\x05\xbc\x90\xfc\x11\x9d\xa1\xf9\x4c\xd2\xb8\x15\xfc\xf4\xa5\xc1\x4e\x18\xab\xa9\xf6\x84\x8e\x12\xb4\xa4\x99\xf2\xdd\x33\xc7\xb8\x94\x2b\xc4\xf8\x0e\xfe\x62\x40\x9f\xe4\x15\x61\x68\x7e\xe3\x3a\x57\x78\xa5\x85\xa4\x3e\x8c\x18\x29\xa9\x85\xae\x3e\x72\x94\x2e\x05\x1f\x33\x6f\xbd\x5c\x24\x35\x03\x8b\xf9\x80\x92\x7a\xba\x3a\xef\x7e\xec\xce\xf8\xd9\xd9\xc2\x6e\xbd\xe6\x25\x1b\x9b\x18\x63\x69\x97\x68\x2b\x54\xb6\xb4\x45\x0d\xd3\x73\xb4\x03\x3e\x25\x1a\xf3\x13\x9b\xdd\xfe\xfe\xf6\xb7\x9b\x77\x37\xb7\x57\xc7\xdf\xa2\xba\x98\x30\x4b\x2a\x4d\x12\xa6\x42\x59\xd3\x32\x73\x13\x36\xdf\xd3\xa4\x54\xa1\xb3\xa4\x61\x45\x5f\xfe\x00\x17\xa7\xec\xf6\xee\xe6\x8f\x9f\xef\xaf\x9b\xa1\x09\x75\x78\x15\xc6\x7e\x4b\xfb\xb6\x01\xcc\xc3\x19\x19\xc9\xed\x08\x27\xc2\x50\x0b\x41\xc0\xa7\x10\xe9\x6e\xc0\xf1\xc5\xfe\xe4\xd9\xdf\x4a\x54\x77\xe7\xa7\x8c\x2d\xb5\xd1\x5a\xd1\xf6\x3d\x53\xc6\xd1\xda\x70\x2e\x83\xa1\x1b\xb0\xc1\xc8\xe9\x54\x6a\x5e\xdb\x04\xc7\x9f\x2a\xfc\xf7\x24\xcd\x7e\x44\x47\x74\xdb\x91\x3d\xbc\xd2\x97\x9a\x7e\x33\x51\xbc\x26\x88\x29\x55\xbb\xa5\xe2\xfd\x2b\x4d\x45\x7a\x1c\x1f\x69\x0e\x3c\xd1\x28\x5e\xe9\xd1\xfb\xa9\xda\x3d\x6b\x97\x51\xba\x31\xc1\x7b\xb4\x89\x70\x7b\x79\xda\xf2\xad\xad\x95\x21\xd8\x19\x00\xd4\xa4\x05\x8a\xd4\xe8\xd4\x85\xe8\xeb\xe9\x51\x92\x5a\xea\x3b\x1f\x7b\xb1\xb9\xe8\xbe\x13\x84\x9c\x7a\xbc\x78\x1b\x09\x1e\x22\x4e\x2c\x80\x92\xf5\x96\x88\xc1\xa7\x27\x31\xb5\x45\x9c\x77\x3f\x88\xc5\xd5\x4e\x4e\x76\x0e\xc8\x5b\x12\xde\x3d\x98\x7e\x46\xf4\x81\x33\x32\x32\xae\xab\x42\xc6\xa6\x51\xd3\x01\xe5\x01\xc8\xeb\x84\xa2\xac\xe9\xcc\x15\xd1\xb6\x85\xa9\xf0\x3f\xa6\x9f\x31\x10\x73\x3c\x46\xeb\xb7\x75\xc0\xef\x60\x16\x5e\xce\x7f\x9f\x8b\xf0\x5f\x00\x00\x00\xff\xff\x3e\xd7\xe8\x85\xf3\x06\x00\x00")

func bootstrap_amazon_k8s_ubuntu_16_04_master_sh() ([]byte, error) {
	return bindata_read(
		_bootstrap_amazon_k8s_ubuntu_16_04_master_sh,
		"bootstrap/amazon_k8s_ubuntu_16.04_master.sh",
	)
}

var _bootstrap_amazon_k8s_ubuntu_16_04_node_sh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x53\x4d\x6f\xdc\x38\x0c\xbd\xeb\x57\x70\x67\x16\xc8\x25\xb2\xb3\xa7\x05\x16\xc8\x02\xfd\x98\x43\x5a\x34\x05\xda\x01\x7a\xe9\x45\x96\x18\x5b\xb1\x2c\x19\x12\x95\xc4\x68\xd3\xdf\x5e\x4a\x76\x93\xe9\xad\xb7\x78\x0e\x23\x3e\xd2\x8f\x8f\xe2\xf3\xfe\xaf\x36\xa7\xd8\x76\xd6\xb7\xe8\xef\xa0\x53\x69\x10\x09\x09\x24\x0a\x6d\xe0\x87\x10\x7b\x90\x2f\xf4\x70\xeb\xe3\x80\x09\xe1\x4e\xb9\x8c\x09\x54\x44\xb0\xfe\x16\x35\xa1\xe1\x03\x05\xa0\x01\x21\xe9\x68\x67\x6a\xe0\x0b\xd6\x02\x7c\x98\x9d\xd5\x96\xdc\x02\x3e\x10\xe4\x64\x7d\x0f\x0a\x08\xa7\xd9\x29\x2a\x81\x53\xbe\xcf\xaa\x47\x60\x82\x95\xae\xf2\xac\x4d\xb8\xa7\x4a\x25\x83\x5e\x87\x1c\x6b\x19\x27\x73\xc2\x58\x50\x67\x27\x5b\xcb\x6d\x2c\x18\x84\x9b\xdf\x98\x43\x6f\x35\x73\x96\x02\x4e\xde\x58\x87\xa9\x81\xd7\x0b\x18\x4c\xb6\xf7\xa0\x9c\x7b\x1e\x60\x1b\x2a\x0d\x21\x3b\xc3\x6d\x3b\xd6\xdf\xb9\xaa\x8a\x8f\x65\x05\x8a\x20\x66\x4f\x76\xc2\x73\x50\xde\xac\xd3\x0e\xc8\x24\xeb\xcc\x10\x51\x39\xb8\x0f\x71\x6c\xe0\xea\x06\x96\x90\xc1\x23\x33\xeb\xe0\x8d\x25\x1b\x3c\x67\xab\xa4\x73\xb8\x8f\x96\xf8\xf2\xa8\x88\xab\x2b\xde\x43\x88\x30\xa9\x91\x9b\xf2\x35\x0d\x3c\xdd\x29\x73\x23\xf6\xfc\x3b\x7e\x7c\x7f\xb8\xbe\xdc\x5d\x5d\xbf\x3b\xbc\x39\x1e\xde\xd6\x70\x27\x3e\xbc\xfa\x7c\x3c\x7c\x7a\x86\xd7\x78\xf7\x92\x3e\x11\x3a\x47\x07\x32\xc1\x40\x34\xa7\xff\xda\x76\x56\x7a\xe4\xd5\xa5\x46\xbb\x90\x4d\xd3\x87\xd0\x3b\x6c\x74\x98\x5a\x35\x53\x6b\x82\x2e\xff\x72\xc4\xa5\xe9\xe7\x1e\xbe\x43\xca\x26\xc0\x06\x81\x32\x06\xa4\xa0\x90\xf5\x00\x2d\x52\xad\x6d\x13\x9b\x41\x33\xa1\xb3\x89\x1a\xd3\x8e\xb9\xc3\xe8\x91\x36\x44\xa4\x01\xa4\x86\x33\xd4\x43\x80\x9d\xc1\xae\x2a\x61\x21\xfc\x6a\x73\x52\x6b\x43\x0b\xcf\xa1\x7c\x40\x6f\x79\x47\x93\xb2\x7e\x07\xff\xff\x69\xb3\x33\x21\x8a\xd4\x9e\x1d\x92\x67\xa3\x78\xaf\x72\x79\x42\xac\x4f\x54\x6c\x26\x17\xf8\x2a\x80\x9f\x14\x34\xfb\x68\x3d\x63\x47\xc5\x62\x69\x0b\xf9\x1e\x46\x8c\x2c\x6a\x8b\x0b\x07\x45\xe5\xd3\x1c\x22\xc9\x7a\x97\x5b\xa6\x28\x70\x48\x27\x91\x32\xd3\xe5\x3f\xcd\xbf\xcd\x85\xbc\xb8\x10\x22\x2d\x89\x3f\x03\x4d\x8e\x3f\x9b\x6a\xe2\x95\xfa\x04\x67\x55\x91\x7e\xc1\x62\x63\x60\x03\xb3\xcf\x9f\xa2\xdb\xc0\xee\x94\x92\xc2\x88\x1e\xfe\xfe\x56\xfd\xf6\xc8\x87\xd5\x61\x8f\x3f\x03\x00\x00\xff\xff\x23\x59\x14\x94\xaa\x04\x00\x00")

func bootstrap_amazon_k8s_ubuntu_16_04_node_sh() ([]byte, error) {
	return bindata_read(
		_bootstrap_amazon_k8s_ubuntu_16_04_node_sh,
		"bootstrap/amazon_k8s_ubuntu_16.04_node.sh",
	)
}

var _bootstrap_digitalocean_k8s_ubuntu_16_04_master_sh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x55\x4d\x6f\x1c\x37\x0f\xbe\xeb\x57\xf0\x5d\x1b\xf0\x1b\x20\x92\xec\x14\x68\x81\x02\x2e\xd0\xa4\x3e\x6c\x5b\x24\x86\xb1\x6d\x2f\xbd\x68\x25\xee\x8c\x3a\x1a\x49\x90\x34\x6b\x2f\xd2\xcd\x6f\x2f\xa5\x99\xb5\xd7\x97\xa2\xb7\x8c\x01\x7b\xf8\x31\xe4\x43\xf2\x21\x7d\xf1\x3f\x39\xe5\x24\xb7\xd6\x4b\xf4\x7b\xd8\xaa\xdc\xb3\x8c\x05\x38\x32\x6d\xe0\x0b\x63\x17\xc0\xbf\xd2\x43\xa9\x37\x3d\x66\x84\xbd\x72\x13\x66\x50\x09\xc1\xfa\xbf\x50\x17\x34\xf4\x52\x02\x94\x1e\x21\xeb\x64\x63\x11\xf0\x07\x36\x07\x7c\x8a\xce\x6a\x5b\xdc\x01\x7c\x28\x30\x65\xeb\x3b\x50\x50\x70\x8c\x4e\x95\x2a\x38\xe5\xbb\x49\x75\x08\x14\x60\x0e\xd7\xe2\xcc\x49\x28\xa7\xca\xd5\x82\x5e\x87\x29\x35\x37\x32\x4e\x19\x53\xd5\x3a\x3b\xda\xe6\x6e\x53\xd5\x41\xd8\xbd\x8a\x1c\x3a\xab\x29\x66\x75\x20\xe3\xce\x3a\xcc\x02\xde\x1f\xc0\x60\xb6\x9d\x07\xe5\xdc\x4b\x01\x4b\x51\xb9\x0f\x93\x33\x94\x76\x4b\xf8\xb7\xae\xa1\xa2\xd7\x3a\x02\x55\x20\x4d\xbe\xd8\x11\xdf\x82\xf2\x66\xae\xb6\x47\x0a\x32\xd7\x0c\x09\x95\x83\xc7\x90\x06\x01\xeb\x1d\x1c\xc2\x04\x1e\x29\xb2\x0e\xde\xd8\x62\x83\x27\x6b\x83\xf4\x16\x1e\x93\x2d\xd4\xbc\x52\xc1\xb5\x11\x5f\x40\x48\x30\xaa\x81\x92\x52\x9b\x7a\xaa\xee\x3c\xb2\x60\x17\xf4\xb3\xf9\xf4\xcb\xdd\xc7\xdb\xd5\xfa\xe3\xcf\x77\x1f\x36\x77\x3f\x35\x71\xc5\xee\x3f\x3d\x6c\x5e\x94\x55\x5a\x35\xef\xaf\xc8\x13\xa6\xa7\xe4\x80\x67\xe8\x4b\x89\xf9\x7b\x29\xa3\xd2\x03\x8d\x2e\x0b\xed\xc2\x64\x44\x17\x42\xe7\x50\xe8\x30\x4a\x15\x8b\x34\x41\xd7\xbf\x7c\xc0\x83\xe8\x62\x07\x7f\x43\x9e\x4c\x80\x45\x05\xca\x18\xe0\xac\x84\x49\xf7\x20\xb1\x34\x5f\x99\x89\x0c\x9a\x02\x3a\x9b\x8b\x30\x72\x98\xb6\x98\x3c\x96\x45\xc3\x72\x0f\x5c\xc3\x15\xea\x3e\xc0\xca\xe0\xb6\x21\x21\x20\xf4\xa9\x38\xf3\xb5\x41\xc2\x8b\xc8\x9f\xd0\x5b\x9a\xd1\xa8\xac\x5f\xc1\x0f\xff\x35\xd9\x15\x63\x15\x6a\x47\x0c\x99\xa2\x51\x34\x57\x7e\x78\xd6\x58\x9f\x4b\xa5\x19\x3f\xc0\x9f\x0c\xe8\xc9\x41\x13\x8f\xe6\x77\xdc\x96\x4a\xb1\xbc\x88\xd4\x87\x01\x13\x81\x5a\xe4\x1a\xa3\x24\xe5\x73\x0c\xa9\xf0\xd6\xcb\xc5\x52\x11\x38\x2c\x67\x92\x32\xe3\xed\x8d\xf8\x4e\x5c\xf3\xeb\xeb\x45\xdd\x7a\xcd\xa7\x62\x5d\x66\x8c\xe5\x43\xa6\xcd\xd0\xc5\xd1\x26\x35\x5e\xcf\xd9\xce\xf4\x04\x34\x95\x93\x9a\xdd\x3f\xac\x7f\xff\x71\x73\xb7\xbe\xbf\xbd\xfc\xbf\x8d\x75\x08\x95\x92\xe1\x91\x76\x67\x0f\x65\xf2\xd7\x34\x26\xf5\x38\xc0\x95\xb4\xd4\x0a\x90\xf0\x39\x26\xba\x01\x70\xf9\xee\x78\x45\x26\x3d\xd1\xc9\x32\x2b\xb9\x02\xbe\xbb\x79\xc3\xda\x20\x2e\x9f\x63\xd6\xe6\x96\x31\x4a\x61\x23\xbb\xff\xed\xfd\xaf\xeb\x0f\x2d\x4f\xa3\x8d\xdd\xd1\xbe\xec\x6c\x27\x46\x7c\x43\xb8\x97\xe2\x68\xb7\x68\x05\x9f\x25\xeb\x69\x77\x38\x57\xd1\xd2\x21\xd8\x63\xe2\x74\x2f\x0d\xaf\x7d\x82\xcb\xcf\x75\x07\x8e\x64\x2d\x61\x40\x4f\x72\x5b\x94\x23\xbc\xf2\x57\x86\x7e\x17\x92\x78\xad\x0c\x73\xae\xdf\x2d\x48\x8e\xaf\x3c\x35\xf9\x71\x7c\xa2\x41\xf0\x4c\xb3\x78\xe5\x47\xef\xa7\x92\x8e\x0b\xd6\xda\x49\x15\xa3\x9b\xe7\xcd\x77\x27\xe6\x51\x5f\xb3\x88\x29\xd4\x6b\xa3\x15\x9d\xc4\x20\x42\xea\xe4\xfe\x9d\xf8\x46\x12\x51\xea\xbd\xe2\x6d\x02\x78\x4e\x30\xb9\xf0\x47\xd5\xf3\x21\xfb\x90\x4f\x66\x6a\x82\xbc\x11\xdf\xca\x25\xd4\x41\x8d\x6e\x4e\xc8\x1b\x88\xd6\xc1\x99\xc0\x67\xc1\xe8\x23\xeb\x45\x35\xd6\x7f\x23\x0f\x21\x14\x36\x0e\x86\x4e\x27\x8f\xf0\x45\xb6\xc5\x60\x3a\xfe\xcb\x67\x27\x2f\x39\x27\x60\xec\x9f\x00\x00\x00\xff\xff\x8e\x9e\xf0\x74\xae\x06\x00\x00")

func bootstrap_digitalocean_k8s_ubuntu_16_04_master_sh() ([]byte, error) {
	return bindata_read(
		_bootstrap_digitalocean_k8s_ubuntu_16_04_master_sh,
		"bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh",
	)
}

var _bootstrap_digitalocean_k8s_ubuntu_16_04_node_sh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x53\x4f\x6f\xd4\x3e\x10\xbd\xe7\x53\xcc\x6f\xf7\x27\xf5\x52\x27\xe5\x84\x84\x54\x24\xfe\xec\xa1\x20\x8a\x04\x2b\x71\xe1\xe2\xd8\xb3\x89\x1b\xc7\x8e\xec\x71\xdb\x08\xca\x67\x67\xec\xa4\xda\x2d\x5c\xb8\x35\x7b\x58\xcf\x3c\xfb\xcd\x1b\xcf\xf3\xf6\xbf\x26\xc5\xd0\xb4\xc6\x35\xe8\x6e\xa1\x95\xb1\xaf\x22\x12\x08\xac\x94\x86\x5f\x55\xb5\x05\xf1\x4c\x1f\x97\xde\xf7\x18\x11\x6e\xa5\x4d\x18\x41\x06\x04\xe3\x6e\x50\x11\x6a\x5e\x90\x07\xea\x11\xa2\x0a\x66\xa2\x1a\xbe\x61\xd9\x80\xf7\x93\x35\xca\x90\x9d\xc1\x79\x82\x14\x8d\xeb\x40\x02\xe1\x38\x59\x49\x39\xb0\xd2\x75\x49\x76\x08\x4c\xb0\xd0\x15\x9e\xa5\x08\xd7\x94\x31\x23\xe8\x94\x4f\xa1\x6c\x63\x30\x45\x0c\x39\x6b\xcd\x68\xca\x76\x13\x72\x0e\xfc\xe1\x09\xb3\xef\x8c\x62\xce\xbc\x81\xc1\x83\xb1\x18\x6b\x78\x3b\x83\xc6\x68\x3a\x07\xd2\xda\x63\x03\x6b\x53\xb1\xf7\xc9\x6a\x2e\xdb\xb2\xfe\xd6\x16\x55\xbc\xcc\x23\x90\x04\x21\x39\x32\x23\x9e\x83\x74\x7a\xe9\xb6\x47\x26\x59\x7a\x86\x80\xd2\xc2\x9d\x0f\x43\x0d\x57\x07\x98\x7d\x02\x87\xcc\xac\xbc\xd3\x86\x8c\x77\x8c\x16\x49\xe7\x70\x17\x0c\xf1\xe5\x51\x16\x57\x46\xbc\x05\x1f\x60\x94\x03\x17\xe5\x6b\xea\xb9\xbb\x53\xe6\xba\xda\xf2\x6f\xff\xf9\xe3\xee\xfa\x72\x73\x75\xfd\x61\xf7\x6e\xbf\x7b\x5f\xc2\x4d\xf5\xe9\xcd\xd7\xfd\xee\xcb\x31\xbd\xc4\x9b\xe7\xf4\x49\x15\x93\xf6\xa0\x52\xb0\x20\x22\xf4\x44\x53\x7c\xd5\x34\x93\x54\x03\xcf\x2f\xd6\xca\xfa\xa4\xeb\xce\xfb\xce\x62\xad\xfc\xd8\xc8\x89\x1a\xed\x55\xfe\x17\x03\xce\x75\x37\x75\xf0\x13\x0a\xc9\x9a\x02\xa9\x35\x88\x85\x97\x7c\x52\x3d\x34\x48\xe5\x40\x13\xd9\x16\x8a\x59\xad\x89\x54\xeb\x66\x48\x2d\x06\x87\xb4\x66\x96\x23\xb1\x07\xa1\xe0\x0c\x55\xef\x61\xa3\xb1\x2d\x9a\x58\x12\x9f\xaf\x4f\x0e\x18\xdf\xc0\x31\x14\xf7\xe8\x0c\x8f\x6c\x94\xc6\x6d\xe0\xf5\xbf\x56\x3c\x5b\xdb\xcf\xca\x3b\x76\x4d\x9a\xb4\xe4\x59\x8b\xf9\x69\xda\xb8\x48\xd9\x7f\x62\x86\xef\x15\xf0\x17\xbd\x62\x83\x2d\x6b\x6c\x29\x7b\x2f\xae\x21\xdf\xcd\x80\x81\xe5\xad\x71\xe6\xa0\x20\x5d\x9c\x7c\x20\x51\xee\x77\x45\xb2\x16\x8b\x74\x12\x49\x3d\x5e\xbe\xa8\x5f\xd6\x17\xe2\xe2\x62\x55\x16\xe7\xc8\x8f\x44\x91\xe5\x47\x55\x2c\xbe\xf0\xff\x09\xb2\xbe\x40\x8f\xd8\x02\x8a\xdd\x23\x27\x7b\x9d\x9f\xc4\x5f\xd9\x1b\xcf\x86\x16\x82\xfc\x80\x0e\xfe\xff\x51\x2c\xfa\xc0\x8b\xc5\x94\x0f\xd5\xef\x00\x00\x00\xff\xff\x5d\x1a\x39\xc2\xde\x04\x00\x00")

func bootstrap_digitalocean_k8s_ubuntu_16_04_node_sh() ([]byte, error) {
	return bindata_read(
		_bootstrap_digitalocean_k8s_ubuntu_16_04_node_sh,
		"bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh",
	)
}

var _bootstrap_inject_go = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x93\xd1\x6a\xdb\x30\x14\x86\xaf\xab\xa7\x38\xf8\x2a\x01\xcf\x6e\x7b\x33\xe8\xd8\x85\xd7\x66\xcc\xb4\x38\x10\xa7\x2b\xa5\xf4\x42\x96\x8f\x1d\xad\x8e\xa4\x49\x72\xdd\x30\xfa\x40\x7b\x8d\x3d\xd9\x8e\x6c\x67\xb4\x2c\x04\x84\x7c\xfe\xf3\xe9\xff\x8f\xec\x34\x85\x4b\x6d\x0e\x56\xb6\x3b\x0f\x7f\x7e\xc3\xf9\xe9\xd9\x47\xd8\xee\x10\xae\xfb\x4a\x0a\x6d\x15\x64\xbd\xdf\x69\xeb\x58\x9a\xd2\x1f\x6e\xa4\x40\xe5\xb0\x86\x5e\xd5\x68\xc1\x93\x32\x33\x5c\xd0\x32\x57\x62\xf8\x8e\xd6\x49\xad\xe0\x3c\x39\x85\x45\x10\x44\x73\x29\x5a\x7e\x0a\x88\x83\xee\x61\xcf\x0f\xa0\xb4\x87\xde\x21\x31\xa4\x83\x46\x76\x08\xf8\x22\xd0\x78\x90\x0a\x84\xde\x9b\x4e\x72\x25\x10\x06\xe9\x77\xe3\x39\x33\x25\x09\x8c\xfb\x99\xa1\x2b\xcf\x49\xce\xa9\xc1\xd0\xae\x79\x2b\x04\xee\x67\xd3\xe1\xb7\xf3\xde\x5c\xa4\xe9\x30\x0c\x09\x1f\x0d\x27\xda\xb6\x69\x37\x49\x5d\x7a\x93\x5f\xae\x8a\x72\xf5\x81\x4c\xcf\x4d\xb7\xaa\x43\xe7\xc0\xe2\xcf\x5e\x5a\x0a\x5c\x1d\x80\x1b\x32\x25\x78\x45\x56\x3b\x3e\x80\xb6\xc0\x5b\x8b\x54\xf3\x3a\x98\x1e\xac\xf4\x52\xb5\x31\x38\xdd\xf8\x81\x5b\x0c\x98\x5a\x3a\x6f\x65\xd5\xfb\x77\x33\x3b\x5a\xa4\xe4\x6f\x05\x34\x35\xae\x20\xca\x4a\xc8\xcb\x08\xbe\x64\x65\x5e\xc6\x01\x72\x97\x6f\xbf\xad\x6f\xb7\x70\x97\x6d\x36\x59\xb1\xcd\x57\x25\xac\x37\x70\xb9\x2e\xae\xf2\x6d\xbe\x2e\x68\xf7\x15\xb2\xe2\x1e\xae\xf3\xe2\x2a\x06\xa4\x89\xd1\x39\xf8\x62\x6c\x48\x40\x36\x65\x98\x26\xd6\xe3\xe8\x4a\xc4\x77\x16\x1a\x3d\x59\x72\x06\x85\x6c\xa4\xa0\x68\xaa\xed\x79\x8b\xd0\xea\x67\xb4\x8a\x12\x81\x41\xbb\x97\x2e\xdc\xaa\x23\x83\x75\xc0\x74\x72\x2f\x3d\xf7\xe3\xa3\xff\x72\x25\x8c\xd1\x8c\x9f\x02\xa4\xd2\xda\x53\x40\x6e\x18\x23\x17\xda\x7a\x88\x42\x5e\xd5\xba\x88\xb1\xa6\x57\x02\x72\xf5\x03\x85\x5f\xd4\xdc\x73\x78\x78\xac\x0e\x9e\xde\xa1\x67\xde\xf5\xe8\xe8\x8a\xcd\xc3\xa4\x7e\x9c\x96\x25\x2c\x8e\x12\xb4\x56\xdb\x25\xfc\x62\x27\x54\xba\x0a\xcd\x17\x9f\x61\x52\x8d\xac\x25\x3b\x09\xd1\x9e\x08\x16\x2a\x96\x52\xe1\x91\x4b\x4d\xff\xba\x8e\x4d\x2e\xd9\xa0\xe9\xb8\xc0\xc5\x5c\x89\xc7\xde\x18\xce\x88\xf4\xca\x4e\x2c\xfa\x9e\x3e\x87\xe9\xf8\xa3\x66\x19\x83\x92\x1d\x7b\x65\x7f\x03\x00\x00\xff\xff\xbc\x34\x80\x62\x48\x03\x00\x00")

func bootstrap_inject_go() ([]byte, error) {
	return bindata_read(
		_bootstrap_inject_go,
		"bootstrap/inject.go",
	)
}

var _bootstrap_vpn_meshbirdmaster_sh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\x4f\x4b\xc4\x30\x10\xc5\xef\xf9\x14\x4f\x5b\x8a\x1e\xda\x39\x79\x11\xf4\x20\x16\x14\xa9\x88\x82\xe0\x49\xda\x74\x34\xd1\x34\x29\x49\xba\x7f\x60\xd9\xcf\xbe\x59\xd8\x65\xbb\xcc\x69\xde\x9b\xf7\x9b\x97\x5d\xd0\x14\x3c\x75\xda\x12\xdb\x05\xba\x36\x28\x11\x38\xa2\x64\x21\x7b\x6c\x85\xc8\xf0\xf9\xf6\x8a\x86\x93\x2e\x27\x6f\xa0\x62\x1c\x6f\x89\x86\x24\x74\xda\xf7\x95\x74\x03\x69\x1b\x62\x6b\x4c\x15\x14\x36\x48\x87\x47\x13\x96\x97\x28\xee\x41\x71\x18\xc9\xb8\xdf\x7f\x5e\x8b\xa6\xfe\x78\x7a\x78\x7e\x7f\xfc\x7e\xa9\xbf\xee\xf2\x2b\xd9\xc6\xb9\x9d\xf2\x72\x4a\xdf\x7b\x5c\xa6\x29\x7f\x70\x73\x2d\x58\x2a\x87\x7c\x9e\xc3\x01\x59\xed\x81\xbc\x1a\x9d\x8f\x38\xe7\xce\xb7\x53\x9d\x3f\xa7\x2d\x0a\xb1\x0b\x00\x00\xff\xff\xda\xd3\x92\x18\xf4\x00\x00\x00")

func bootstrap_vpn_meshbirdmaster_sh() ([]byte, error) {
	return bindata_read(
		_bootstrap_vpn_meshbirdmaster_sh,
		"bootstrap/vpn/meshbirdMaster.sh",
	)
}

var _bootstrap_vpn_meshbirdnode_sh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x52\xc1\x6e\xd4\x30\x10\xbd\xfb\x2b\x1e\x5d\xc4\xa9\x4d\xee\x48\x5c\x4a\x57\x62\x41\xad\x10\x54\x20\x4e\xc8\x71\x66\xe3\x69\x1d\x7b\x65\x8f\x5b\x56\x42\x7c\x3b\xe3\x04\xd4\xf6\x0b\x36\xb9\xd8\x6f\xc6\xef\xcd\x7b\xf6\xe6\x55\x5f\x4b\xee\x07\x8e\x3d\xc5\x07\x0c\xb6\x78\x53\x48\x70\x41\xc6\x8d\xf8\x63\xcc\x06\x17\x27\xfa\x54\xfa\xd6\x53\x21\x3c\xd8\x50\xa9\xc0\x66\x02\xc7\x3b\x72\x42\xa3\x2e\x24\x41\x3c\xa1\xb8\xcc\x07\xe9\xf0\x9d\x96\x06\xfa\x75\x08\xec\x58\xc2\x11\x31\x09\x6a\xe1\x38\xc1\x42\x68\x3e\x04\x2b\x6d\x13\x6c\x9c\xaa\x9d\x08\x4a\xb0\xd2\x2d\x3c\xab\x88\x6a\xda\xd2\x2a\x14\x5d\xaa\x79\x69\xd3\x62\x2d\x94\x1b\x1a\x78\xe6\xa5\x9d\x73\xc3\x90\xf6\x2f\x98\xd3\xc4\x4e\x39\x5b\x83\x16\xf7\x1c\xa8\x74\xb8\x3c\x62\xa4\xc2\x53\x84\x0d\xe1\xc9\xc0\x3f\x53\xc5\xa7\x1a\x46\x95\x1d\x74\xfe\x21\x2c\x53\xe9\xb2\x5d\x81\x15\xe4\x1a\x85\x67\x3a\x87\x8d\xe3\xea\xd6\x93\x92\xac\x9e\x91\xc9\x06\x3c\xa6\x7c\xdf\x61\xb7\xc7\x31\x55\x44\x52\x66\x97\xe2\xc8\xc2\x29\x6a\x75\x19\xe9\x1c\x8f\x99\x45\xc3\x93\x36\xdc\x72\xc5\x1b\xa4\x8c\xd9\xde\xab\xa8\xc6\xe4\xd5\xdd\x73\xe6\xce\x6c\xf4\xbf\xde\x7e\xfd\x70\xb9\xfb\x72\xf5\xf3\xd3\xf6\xc7\xbb\xb3\xdd\xcd\xc7\xed\xfb\xdb\xed\x55\x43\x15\x38\x3b\xe5\xc3\x50\xed\x6f\x9f\x6f\x70\x4d\xea\xc4\xd5\x1c\xe0\x45\x0e\x6f\xfb\x7e\x56\x60\xe0\x3c\x76\x2e\xcd\x3d\xc7\x22\x9a\x78\x57\x3c\x7e\xab\x3b\xa3\x2f\x23\x65\xc1\x0b\x57\xaf\x9f\xef\xcc\xff\xe3\xb8\x4b\x9a\xd3\x1b\xf3\x37\x00\x00\xff\xff\x85\xc7\x28\xe5\x1c\x03\x00\x00")

func bootstrap_vpn_meshbirdnode_sh() ([]byte, error) {
	return bindata_read(
		_bootstrap_vpn_meshbirdnode_sh,
		"bootstrap/vpn/meshbirdNode.sh",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"bootstrap/README.md": bootstrap_readme_md,
	"bootstrap/amazon_k8s_ubuntu_16.04_master.sh": bootstrap_amazon_k8s_ubuntu_16_04_master_sh,
	"bootstrap/amazon_k8s_ubuntu_16.04_node.sh": bootstrap_amazon_k8s_ubuntu_16_04_node_sh,
	"bootstrap/digitalocean_k8s_ubuntu_16.04_master.sh": bootstrap_digitalocean_k8s_ubuntu_16_04_master_sh,
	"bootstrap/digitalocean_k8s_ubuntu_16.04_node.sh": bootstrap_digitalocean_k8s_ubuntu_16_04_node_sh,
	"bootstrap/inject.go": bootstrap_inject_go,
	"bootstrap/vpn/meshbirdMaster.sh": bootstrap_vpn_meshbirdmaster_sh,
	"bootstrap/vpn/meshbirdNode.sh": bootstrap_vpn_meshbirdnode_sh,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"bootstrap": &_bintree_t{nil, map[string]*_bintree_t{
		"README.md": &_bintree_t{bootstrap_readme_md, map[string]*_bintree_t{
		}},
		"amazon_k8s_ubuntu_16.04_master.sh": &_bintree_t{bootstrap_amazon_k8s_ubuntu_16_04_master_sh, map[string]*_bintree_t{
		}},
		"amazon_k8s_ubuntu_16.04_node.sh": &_bintree_t{bootstrap_amazon_k8s_ubuntu_16_04_node_sh, map[string]*_bintree_t{
		}},
		"digitalocean_k8s_ubuntu_16.04_master.sh": &_bintree_t{bootstrap_digitalocean_k8s_ubuntu_16_04_master_sh, map[string]*_bintree_t{
		}},
		"digitalocean_k8s_ubuntu_16.04_node.sh": &_bintree_t{bootstrap_digitalocean_k8s_ubuntu_16_04_node_sh, map[string]*_bintree_t{
		}},
		"inject.go": &_bintree_t{bootstrap_inject_go, map[string]*_bintree_t{
		}},
		"vpn": &_bintree_t{nil, map[string]*_bintree_t{
			"meshbirdMaster.sh": &_bintree_t{bootstrap_vpn_meshbirdmaster_sh, map[string]*_bintree_t{
			}},
			"meshbirdNode.sh": &_bintree_t{bootstrap_vpn_meshbirdnode_sh, map[string]*_bintree_t{
			}},
		}},
	}},
}}
